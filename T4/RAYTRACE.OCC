-- workers are arranged in a linked list
-- fromPrev, toPrev links to previous worker (or cntlsys for worker 0)
-- fromNext, toNext links to next worker (or nowhere if last worker)
-- propogate will be true for all but the last worker

-- pixelBypass - sends commands upstream (towards cntlsys)
-- renderer    - the actual pixel rendernig (get c.render, send c.patch)

PROC rayTrace   ( CHAN OF ANY fromPrev, toPrev, fromNext, toNext,
                    VAL INT propogate, me )

  #USE "occama.lib"     --T414 math library

  VAL c.stop    IS 0 :
  VAL c.render  IS 1 :  -- x0; y0
  VAL c.patch   IS 4 :  -- worker; x; y; patchSize; [ patchSize][patchSize]
  VAL c.done    IS 7 :  -- worker;
  VAL c.tick    IS 8 :  -- worker;debug;

  PROC ledon(VAL INT delay)
    TIMER t :
    INT start :
    SEQ
      ASM
        CLRHALTERR
        SETERR
      t ? start
      t ? AFTER start PLUS (delay)
  :
  
  PROC ledoff()
    ASM
      TESTERR
  :

  -- forward
  PROC throughPut ( CHAN OF ANY in, out, VAL INT forward )
    INT tag :
    WHILE TRUE
      SEQ
        ledon(1000)
        in ? tag
        ledoff()
        IF
          tag = c.render
            SEQ
              IF
                forward <> 0
                  out ! tag
                TRUE
                  SKIP
          tag = c.stop
            SEQ
              IF
                forward <> 0
                  out ! tag
                TRUE
                  SKIP
  :


  -- back
  PROC pixelBypass ( CHAN OF ANY out, in)
    INT command :
    INT x, y, size, worker :
    WHILE TRUE
      SEQ
        in ? command
        IF
          command = c.patch
            SEQ
              in  ? worker; x; y; size
              out ! command; worker; x; y; size
          command = c.done
            SEQ
              in  ? worker
              out ! command; worker
          command = c.tick
            INT p1,p2 :
            SEQ
              in  ? p1;p2
              out ! command; p1; p2
          command = c.stop
            SEQ
              out ! command
  :
  
  SEQ
    ledon(40000)
    ledoff()
    WHILE TRUE
      PAR
        throughPut  ( fromPrev, toNext, propogate )
        pixelBypass ( toPrev, fromNext )
:


