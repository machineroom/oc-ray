-- out, back is link to first worker
-- graphics is output to framebuf
-- machines is total number of workers

-- upstream commands:
--    c.render
--    c.stop
-- downstream command:
--    c.patch
--    c.done
--    c.stop

-- out is to workers
-- back is from workers
-- graphics is to renderer
PROC controlSystem ( CHAN OF ANY out, graphics, VAL INT machines )


  VAL c.render      IS 1 :  -- x0; y0
  VAL c.tick        IS 8 :  -- worker;debug;

  PROC ledon(VAL INT delay)
    TIMER t :
    INT start :
    SEQ
      ASM
        CLRHALTERR
        SETERR
      t ? start
      t ? AFTER start PLUS (delay)
  :
  
  PROC ledoff()
    ASM
      TESTERR
  :

  VAL patchEdge IS 8 :
  VAL patchesWide IS 256 / patchEdge :
  SEQ
    INT free :
    SEQ
      free := machines 
      SEQ x = 0 FOR patchesWide
        SEQ y = 0 FOR patchesWide
          SEQ
            graphics ! c.tick; 258; free
            graphics ! c.tick; 260; free
            ledon(1000)
            out ! c.render
            graphics ! c.tick; 261; free
            ledoff()
            free := free - 1

:

