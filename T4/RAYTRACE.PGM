--{{{  kilo, mega 
VAL K IS 1024:
VAL M IS K*K:
--}}}

--{{{  HIGH, LOW priority levels
VAL HIGH IS 0:
VAL LOW IS 1:
--}}}

--{{{  problem size. `processors` is total number of nodes in the net. `workers` is number of raytracer nodes (processors-2)
VAL processors IS 4 :
VAL workers IS 2 :
--}}}

--{{{  hardware description -  *4 T425

[processors]NODE System:
ARC Hostlink:

NETWORK
  DO
    SET System[0] (type, memsize := "T425", 512*K)
    SET System[1] (type, memsize := "T425", 16*M)
    SET System[2] (type, memsize := "T425", 16*M)
    SET System[3] (type, memsize := "T425", 16*M)
    CONNECT System[0][link][1] TO HOST WITH Hostlink
    CONNECT System[1][link][0] TO System[0][link][3]
    CONNECT System[2][link][0] TO System[1][link][2]
    CONNECT System[3][link][0] TO System[2][link][2]

:
--}}}

--{{{  Mapping
NODE framebuf.p :
NODE cntlsys.p :
[workers]NODE raytrace.p :

MAPPING
  DO
    MAP framebuf.p ONTO System[0]
    MAP cntlsys.p ONTO System[1]
    MAP raytrace.p[0] ONTO System[2]
    MAP raytrace.p[1] ONTO System[3]
:
--}}}

--{{{  Code
#INCLUDE "hostio.inc"
#USE "framebuf.c4h"
#USE "cntlsys.c4h"
#USE "raytrace.c4h"

CONFIG
  CHAN OF SP frame.in, frame.out :
  PLACE frame.in, frame.out ON Hostlink :
  [workers]CHAN OF ANY forward, back :
  CHAN OF ANY f,b :
  CHAN OF ANY graphics, soft :
  CHAN OF INT image :

  VAL true      IS #FFFF :
  VAL false     IS #0000 :

  PAR
    PROCESSOR framebuf.p
      frameBuffer (frame.in, frame.out, graphics, image, workers, 50, 34500, 0, 25000000)
    PROCESSOR cntlsys.p
      controlSystem (forward[0], back[0], graphics, image, workers)
    PROCESSOR raytrace.p[0]
      rayTrace (forward[0], back[0], back[1], forward[1], true, 0)
    PROCESSOR raytrace.p[1]
      rayTrace (forward[1], back[1], soft, soft, false, 1)
:
--}}}
  


